# PARSER
parseRepo:
  handler: src/parser.handler
  events:
    - http:
        path: /parser/{version}/{username}/{repo}
        method: get
    - http:
        path: /parser/{version}/{username}/{repo}/{branch}
        method: get
# save:
#   handler: src/parser.testSave
#   events:
#     - http:
#         path: /parser
#         method: post

# COGS
getAllCogs:
  handler: src/cogs.get
  events:
    - http:
        path: /cogs
        method: get
getCog:
  handler: src/cogs.getOne
  events:
    - http:
        path: /cogs/{username}/{repo}/{branch}/{cog}
        method: get
getCogsInRepo:
  handler: src/cogs.getCogsInRepo
  events:
    - http:
        path: /cogs/{username}/{repo}
        method: get
    - http:
        path: /cogs/{username}/{repo}/{branch}
        method: get
getCogsForUser:
  handler: src/cogs.getCogsForUser
  events:
    - http:
        path: /cogs/{username}
        method: get
removeCogByPath:
  handler: src/cogs.removeCogByPath
  events:
    - http:
        path: /cogs/{username}/{repo}/{cog}/{branch}
        method: delete
        authorizer: auth
removeCogsByRepo:
  handler: src/cogs.removeCogsByRepo
  events:
    - http:
        path: /cogs/{username}/{repo}/{branch}
        method: delete
        authorizer: auth
reportCog:
  handler: src/cogs.report
  events:
    - http:
        path: /cogs/{username}/{repo}/{cog}/{branch}/report
        method: post

# REPOS
getAllRepos:
  handler: src/repos.get
  events:
    - http:
        path: /repos
        method: get
getRepo:
  handler: src/repos.getOne
  events:
    - http:
        path: /repos/{username}/{repo}
        method: get
    - http:
        path: /repos/{username}/{repo}/{branch}
        method: get
getReposForUser:
  handler: src/repos.getReposForUser
  events:
    - http:
        path: /repos/{username}
        method: get
removeRepoByPath:
  handler: src/repos.removeRepoByPath
  events:
    - http:
        path: /repos/{username}/{repo}/{branch}
        method: delete
        authorizer: auth

# V1 Sync
syncCogs:
  handler: src/sync.cogs
  events:
    # - schedule:
    #     rate: rate(1 days)
    #     enabled: true
    - http:
        path: /sync/cogs
        method: get
syncRepos:
  handler: src/sync.repos
  events:
    # - schedule:
    #     rate: rate(1 days)
    #     enabled: true
    - http:
        path: /sync/repos
        method: get

# Auth
auth:
  handler: src/auth.authorize
  cors: true
  environment:
    AUTH0_CLIENT_PUBLIC_KEY: ${file(./public_key)}
    AUTH0_CLIENT_ID: ${env:AUTH0_CLIENT_ID}
sm:
  handler: src/sm.handler
  environment:
    AUTH0_API_CLIENT_ID: ${env:AUTH0_API_CLIENT_ID}
    AUTH0_API_CLIENT_SECRET: ${env:AUTH0_API_CLIENT_SECRET}

# Github
getGithubHooks:
  handler: src/github.getGithubHooks
  events:
    - http:
        path: /github/hooks/{username}/{repo}
        method: get
createGithubHook:
  handler: src/github.createGithubHook
  events:
    - http:
        path: /github/hooks
        method: post
        authorizer: auth
        cors: true
  environment:
    HOOK_SECRET: ${env:HOOK_SECRET}
getGithubReposForUser:
  handler: src/github.getRepos
  events:
    - http:
        path: /github/repos/{username}
        method: get
        authorizer: auth
        cors: true
getGithubBranchesForRepo:
  handler: src/github.getBranches
  events:
    - http:
        path: /github/branches/{username}/{repo}
        method: get
        authorizer: auth
        cors: true
recieveWebhook:
  handler: src/github.webhook
  events:
    - http:
        path: /github/hooks/{username}/{repo}/{branch}
        method: post
  environment:
    HOOK_SECRET: ${env:HOOK_SECRET}

# PANEL
getUserMeta:
  handler: src/panel.getUserMeta
  events:
    - http:
        path: /panel/meta
        method: get
        authorizer: auth
        cors: true
removeRepo:
  handler: src/panel.removeRepo
  events:
    - http:
        path: /panel/removeRepo/{username}/{repo}/{branch}
        method: delete
        authorizer: auth
        cors: true
hideRepo:
  handler: src/panel.hideRepo
  events:
    - http:
        path: /panel/hideRepo/{username}/{repo}/{branch}
        method: put
        authorizer: auth
        cors: true
approveRepo:
  handler: src/panel.approveRepo
  events:
    - http:
        path: /panel/approve/{username}/{repo}/{branch}
        method: post
        authorizer: auth
getReportsPreRepo:
  handler: src/panel.getReportsPerRepo
  events:
    - http:
        path: /panel/reports
        method: get
        authorizer: auth

# Tags
getTopTags:
  handler: src/tags.getTop
  events:
    - http:
        path: /tags/top
        method: get

# USERS
getUsers:
  handler: src/users.get
  events:
    - http:
        path: /users
        method: get
        authorizer: auth
updateUser:
  handler: src/users.updateUser
  events:
    - http:
        path: /users/{id}
        method: patch
        authorizer: auth

# SEARCH
search:
  handler: src/search.search
  events:
    - http:
        path: /search/{term}
        method: get
        cors: true
